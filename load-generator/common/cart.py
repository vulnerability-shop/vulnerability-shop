import random
import json
from locust import FastHttpUser
import config
from catalog import get_items_page


def add_to_cart(http: FastHttpUser, auth_token, item_id, item_qty):
    http.host = config["cart"]["host"]
    url = '/addCartItem'
    data = {
        'itemId': item_id,
        'itemQuantity': item_qty
    }

    with http.rest(method="POST", url=url, json=data, headers={'Authorization': auth_token}) as response:
            if response.ok:
                print(f'Added {item_qty} of Item: {item_id} to cart for User: {json.loads(response.text)["customerId"]}')
            elif response.status_code == 401:
                print('Login error in add to cart')
                exit(1)
            else:
                print('Error in add to cart')
                exit(1)


def add_to_cart_random(http: FastHttpUser, auth_token):
    nb_items = random.randint(1, 3)
    items_added = 0
    for _ in range(nb_items):
        items = get_items_page(http)
        item = items[random.randint(1, len(items))]
        item_id = item['Id']
        item_stock = item['Stock']
        if item_stock <= 0:
            continue
        item_qty = random.randint(1, min(item_stock, 5))
        add_to_cart(http, auth_token, item_id, item_qty)
        items_added += 1
    return items_added


def clear_cart(http: FastHttpUser, auth_token):
    http.host = config["cart"]["host"]
    url = '/clearUserCart'

    with http.rest(method="DELETE", url=url, headers={'Authorization': auth_token}) as response:
            if response.ok:
                print(f'Cart cleared for User: {auth_token}')
            else:
                print(f'Error clearing cart for User: {auth_token}')
                exit(1)


def update_cart_item(http: FastHttpUser, auth_token, item_id, item_qty):
    http.host = config["cart"]["host"]
    url = '/updateCartItem'
    data = {
        'itemId': item_id,
        'itemQuantity': item_qty
    }

    with http.rest(method="PUT", url=url, json=data, headers={'Authorization': auth_token}) as response:
            if response.ok:
                print(f'Added {item_qty} of Item: {item_id} to cart for User: {json.loads(response.text)["customerId"]}')
            elif response.status_code == 401:
                print('Login error in cart update')
                exit(1)
            else:
                print('Error in cart update')
                exit(1)

def remove_cart_item(http: FastHttpUser, auth_token, item_id):
    http.host = config["cart"]["host"]
    url = f'/removeCartItem/{item_id}'

    with http.rest(method="DELETE", url=url, headers={'Authorization': auth_token}) as response:
        if response.ok:
            return
        elif response.status_code == 401:
            print('Login error in cart fetch')
            exit(1)
        else:
            print('Error in cart fetch')
            exit(1)


def get_cart_items(http: FastHttpUser, auth_token):
    http.host = config["cart"]["host"]
    url = '/getUserItems'

    with http.rest(method="GET", url=url, headers={'Authorization': auth_token}) as response:
        if response.ok:
            items = json.loads(response.text)['data']
            return items
        elif response.status_code == 401:
            print('Login error in cart fetch')
            exit(1)
        else:
            print('Error in cart fetch')
            exit(1)
