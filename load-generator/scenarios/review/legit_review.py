import datetime
import os
from random import randrange
from locust import HttpUser, task, between, run_single_user


class ParserUser(HttpUser):
    host = "http://localhost:5173"
    wait_time = between(1, 5)

    @task
    def main(self):
        # get items
        response = self.client.get("http://localhost:5181/getItems?page=-1&size=20")

        data = response.json()

        index = randrange(1, len(data["data"]))

        item = data["data"][index]

        itemId = item["id"]

        time = datetime.datetime.now().strftime("%Y-%m-%dT%H:%M:%S.000Z")

        # post review
        response = self.client.post(
            "http://localhost:5183/postReview",
            headers={
                "Host": "localhost:5183",
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0",
                "Accept": "text/plain",
                "Accept-Language": "en-US,en;q=0.5",
                "Accept-Encoding": "gzip, deflate, br",
                "Referer": "http://localhost:5183/swagger/index.html",
                "Content-Type": "application/json",
                "Content-Length": "381",
                "Origin": "http://localhost:5183",
                "DNT": "1",
                "Connection": "keep-alive",
                "Sec-Fetch-Dest": "empty",
                "Sec-Fetch-Mode": "cors",
                "Sec-Fetch-Site": "same-origin",
            },
            data="""{{
                "id": 0,
                "itemId": {0},
                "customerId": 1,
                "timeCreated": "{1}",
                "timeUpdated": "{1}",
                "title": "lorem ipsum",
                "reviewText": "dolor sit amet"
            }}""".format(
                itemId, time
            ),
        )

        reviewId = response.json()["id"]

        folderpath = "load-generator\\scenarios\\review\\tmp"
        files = os.listdir(folderpath)
        filecount = len(files)
        fileindex = randrange(0, filecount - 1)
        attachement = open(os.path.join(folderpath, files[fileindex]), "rb")

        # post picture
        response = self.client.post(
            "http://localhost:5183/postPicture/" + str(reviewId),
            files={"picture": attachement},
        )

        pictureId = response.json()["id"]

        # get picture
        response = self.client.get(
            "http://localhost:5183/getPicture/" + str(pictureId),
            headers={
                "Host": "localhost:5183",
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0",
                "Accept": "*/*",
                "Accept-Language": "en-US,en;q=0.5",
                "Accept-Encoding": "gzip, deflate, br",
                "Referer": "http://localhost:5173/",
                "DNT": "1",
                "Connection": "keep-alive",
                "Sec-Fetch-Dest": "empty",
                "Sec-Fetch-Mode": "cors",
                "Sec-Fetch-Site": "same-origin",
            },
        )

    def on_start(self):
        # self.login = random_login()
        return super().on_start()


# if launched directly, e.g. "python3 debugging.py", not "locust -f debugging.py"
if __name__ == "__main__":
    run_single_user(ParserUser)
