using review.Services.Interfaces;

namespace review.Services
{
    public class UserHttpClient : IUserClient
    {
        private static HttpClient _httpClient;
        private static IServiceDiscoveryClient _serviceDiscoveryClient;

        public UserHttpClient(HttpClient httpClient, IServiceDiscoveryClient serviceDiscoveryClient)
        {
            _httpClient = httpClient;
            _serviceDiscoveryClient = serviceDiscoveryClient;
        }

        public async Task<int> ValidateUserToken(string token)
        {
            string userAddress = await _serviceDiscoveryClient.GetService("user");
            var response = await _httpClient.GetAsync(userAddress + "/validateToken?token=" + token);
            if (response.StatusCode == System.Net.HttpStatusCode.OK)
            {
                try
                {
                    int userID = int.Parse(await response.Content.ReadAsStringAsync());
                    return userID;
                }
                catch
                {
                    return -1;
                }
            }
            else
            {
                return -1;
            }
        }
    }
}
