using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Http;
using Microsoft.IdentityModel.Tokens;
using System.IdentityModel.Tokens.Jwt;
using System.Text;
using System.Threading.Tasks;

namespace cart.Services
{
    // You may need to install the Microsoft.AspNetCore.Http.Abstractions package into your project
    public class ValidateTokenMiddleware
    {
        private readonly RequestDelegate _next;

        private UserHttpClient _userHttpClient;

        public ValidateTokenMiddleware(RequestDelegate next)
        {
            _next = next;
            _userHttpClient= new UserHttpClient();
        }

        public Task Invoke(HttpContext httpContext)
        {
            string token = httpContext.Request.Headers["Authorization"].FirstOrDefault()?.Split(" ").Last() ?? "";
            if (token.IsNullOrEmpty())
            {
                return _next(httpContext);
            }

            int userId = _userHttpClient.ValidateUserToken(token).Result;
            if (userId != -1)
            {
                // attach user to context on successful jwt validation
                httpContext.Items["UserId"] = userId;
            }

            return _next(httpContext);
        }
    }

    // Extension method used to add the middleware to the HTTP request pipeline.
    public static class ValidateTokenMiddlewareExtensions
    {
        public static IApplicationBuilder UseValidateTokenMiddleware(this IApplicationBuilder builder)
        {
            return builder.UseMiddleware<ValidateTokenMiddleware>();
        }
    }
}
