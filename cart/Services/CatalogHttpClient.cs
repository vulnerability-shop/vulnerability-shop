using cart.Models;
using cart.Services.Interfaces;
using cart.Services;

namespace cart.Services
{
    public class CatalogHttpClient: ICatalogClient
    {
        private readonly HttpClient _httpClient;
        private static IServiceDiscoveryClient _serviceDiscoveryClient;

        public CatalogHttpClient(HttpClient httpClient, IServiceDiscoveryClient serviceDiscoveryClient)
        {
            _httpClient = httpClient;
            _serviceDiscoveryClient = serviceDiscoveryClient;
        }

        public async Task<ItemDto?> GetItem(float itemId)
        {
            string catalogUrl = await _serviceDiscoveryClient.GetService("catalog");
            var response = await _httpClient.GetAsync(catalogUrl + "/GetItem/" + itemId);
            if (response.StatusCode == System.Net.HttpStatusCode.OK)
            {
                try
                {
                    return await response.Content.ReadFromJsonAsync<ItemDto>();
                }
                catch
                {
                    return null;
                }
            }
            else
            {
                return null;
            }
        }
    }
}
