package utils

import (
	"context"
	"net/http"
)

type UserContext struct{}

func ValidateTokenMiddleware(next http.Handler) http.Handler {
	return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		var token string = r.Header.Get("Authorization")
		if token == "" {
			ctx := context.WithValue(r.Context(), UserContext{}, -1)
			next.ServeHTTP(w, r.WithContext(ctx))
			return
		}

		res, err := http.Get("http://user/validateToken?token=" + token)
		if err != nil || res.StatusCode != 200 {
			ctx := context.WithValue(r.Context(), UserContext{}, -1)
			next.ServeHTTP(w, r.WithContext(ctx))
			return
		}

		ctx := context.WithValue(r.Context(), UserContext{}, res.Body)
		next.ServeHTTP(w, r.WithContext(ctx))
	})
}
