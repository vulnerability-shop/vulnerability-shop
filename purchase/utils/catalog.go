package utils

import (
	"encoding/json"
	"errors"
	"fmt"
	"net/http"

	"github.com/vulnerability-shop/vulnerability-shop/purchase/models"
)

func FetchItem(id int) (models.Item, error) {
	var item models.Item

	catalogUrl, err := GetService("catalog")
	if err != nil {
		return item, errors.New("failed retrieving catalog address")
	}

	var query = fmt.Sprintf("%s/getItem/%d", catalogUrl, id)
	resp, err := http.Get(query)
	if err != nil {
		return item, errors.New("failed retrieving item")
	}

	defer resp.Body.Close()

	err = json.NewDecoder(resp.Body).Decode(&item)
	if err != nil {
		return item, errors.New("failed retrieving item")
	}

	return item, nil
}

func OrderItem(id int, qty int) error {
	catalogUrl, err := GetService("catalog")
	if err != nil {
		return errors.New("failed retrieving catalog address")
	}

	var query = fmt.Sprintf("%s/order/%d/%d", catalogUrl, id, qty)
	_, err = http.Post(query, "content/none", nil)
	if err != nil {
		return errors.New("failed retrieving item")
	}

	return nil
}
