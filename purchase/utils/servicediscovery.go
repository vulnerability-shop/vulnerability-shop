package utils

import (
	"encoding/json"
	"errors"
	"net"
	"net/http"
	"os"
)

func Ping(w http.ResponseWriter, r *http.Request) {
	w.WriteHeader(http.StatusOK)
	return
}

func getHostAddr() string {
	name, err := os.Hostname()
	if err != nil {
		return ""
	}

	addrs, err := net.LookupHost(name)
	if err != nil {
		return ""
	}

	return addrs[0]
}

func Register() error {
	hostAddr := getHostAddr()
	url := "http://servicediscovery:4000/register?name=purchase&address=http://" + hostAddr + ":80"
	client := &http.Client{}
	req, _ := http.NewRequest("GET", url, nil)
	req.Header.Set("authtoken", "admin123")
	_, err := client.Do(req)

	if err != nil {
		return errors.New("Failed registering service")
	}
	return nil
}

func GetService(serviceName string) (string, error) {
	url := "http://servicediscovery:4000/find?name=" + serviceName
	client := &http.Client{}
	req, _ := http.NewRequest("GET", url, nil)
	req.Header.Set("authtoken", "admin123")
	res, err := client.Do(req)
	if err != nil {
		return "", errors.New("Failed to get service address")
	}

	var serviceAddress string
	err = json.NewDecoder(res.Body).Decode(&serviceAddress)
	if err != nil {
		return "", errors.New("Error on read response")
	}
	res.Body.Close()
	return serviceAddress, nil
}
