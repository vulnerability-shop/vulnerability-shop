import { ChangeEvent, FormEvent, useEffect, useState } from 'react';
import { Link, useLocation, useNavigate } from 'react-router-dom';
import Alert, { AlertType } from '../components/Alert';

const formInitialState = {
  username: '',
  password: ''
};

function Login() {
  const [form, setForm] = useState(formInitialState);
  const [error, setError] = useState('');
  const [displayMessage, setDisplayMessage] = useState(true);
  const location = useLocation();
  const navigate = useNavigate();

  useEffect(() => {
    if (localStorage.getItem('username') !== null) {
      navigate('/');
    }
  });

  const handleFormChange = (event: ChangeEvent<HTMLInputElement>) => {
    setForm({
      ...form,
      [event.target.name]: event.target.value
    });
  };

  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    setDisplayMessage(false);

    const submitForm = async () => {
      try {
        const response = await fetch('http://127.0.0.1:5180/login', { method: 'POST', body: JSON.stringify(form) });
        if (response.status !== 200) {
          const responseText = await response.text();
          setError(responseText);
        } else {
          const responseJson = await response.json();
          localStorage.setItem('username', responseJson.username);
          localStorage.setItem('token', responseJson.token);
          navigate('/');
        }
      } catch (error) {
        setError('We are currently experiencing technical difficulties, please try again later');
      }
    };
    submitForm();
  };

  return (
    <>
      <div className="flex flex-col items-center h-screen justify-center">
        {error.length > 0 && (
          <Alert type={AlertType.error} className="w-96 mb-5">
            {error}
          </Alert>
        )}

        {location.state && location.state.message.length > 0 && displayMessage && (
          <Alert type={AlertType.success} className="w-96 mb-5">
            {location.state.message}
          </Alert>
        )}

        <div className="card bg-slate-50 w-96 border-[1px]">
          <div className="card-body items-center">
            <h1 className="card-title text-3xl pb-3">Login</h1>
            <form onSubmit={handleSubmit}>
              <input type="text" name="username" placeholder="Username" className="input input-bordered w-full max-w-xs mt-2" value={form.username} onChange={handleFormChange} required />
              <input type="password" name="password" placeholder="Password" className="input input-bordered w-full max-w-xs mt-2" value={form.password} onChange={handleFormChange} required />
              <button type="submit" className="btn btn-primary w-full max-w-xs rounded-3xl mt-3">
                Login
              </button>
            </form>

            <div className="divider"></div>

            <Link className="link" to="/register">
              Create a new account
            </Link>
          </div>
        </div>
      </div>
    </>
  );
}

export default Login;
