import { ChangeEvent, FormEvent, useEffect, useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import Alert, { AlertType } from '../components/Alert';

const formInitialState = {
  username: '',
  email: '',
  firstName: '',
  lastName: '',
  address: '',
  phoneNumber: '',
  password: '',
  passwordConfirm: ''
};

function Register() {
  const [form, setForm] = useState(formInitialState);
  const [error, setError] = useState('');
  const navigate = useNavigate();

  useEffect(() => {
    if (localStorage.getItem('username') !== null) {
      navigate('/');
    }
  });

  const handleFormChange = (event: ChangeEvent<HTMLInputElement>) => {
    setForm({
      ...form,
      [event.target.name]: event.target.value
    });
  };

  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {
    event.preventDefault();

    // We first validate that both password match
    if (form.password === form.passwordConfirm) {
      const submitForm = async () => {
        try {
          const response = await fetch('http://127.0.0.1:80/register', { method: 'POST', body: JSON.stringify(form) });
          const responseText = await response.text();

          if (response.status !== 200) {
            setError(responseText);
          } else {
            navigate('/login', { state: { message: responseText } });
          }
        } catch (error) {
          setError('We are currently experiencing technical difficulties, please try again later');
        }
      };
      submitForm();
    } else {
      setError('Your passwords do not match');
    }
  };

  return (
    <>
      <div className="flex flex-col items-center h-screen justify-center">
        {error.length > 0 && (
          <Alert type={AlertType.error} className=" w-96 mb-5">
            {error}
          </Alert>
        )}

        <div className="card bg-slate-50 w-96 border-[1px]">
          <div className="card-body items-center">
            <h1 className="card-title text-3xl pb-3">Create a new account</h1>
            <form onSubmit={handleSubmit}>
              <input type="text" name="username" placeholder="Username" className="input input-bordered w-full max-w-xs mt-2" value={form.username} onChange={handleFormChange} required />
              <input type="text" name="email" placeholder="Email" className="input input-bordered w-full max-w-xs mt-2" value={form.email} onChange={handleFormChange} required />
              <input type="text" name="firstName" placeholder="First Name" className="input input-bordered w-full max-w-xs mt-2" value={form.firstName} onChange={handleFormChange} required />
              <input type="text" name="lastName" placeholder="Last Name" className="input input-bordered w-full max-w-xs mt-2" value={form.lastName} onChange={handleFormChange} required />
              <input type="text" name="address" placeholder="Address" className="input input-bordered w-full max-w-xs mt-2" value={form.address} onChange={handleFormChange} />
              <input type="text" name="phoneNumber" placeholder="Phone Number" className="input input-bordered w-full max-w-xs mt-2" value={form.phoneNumber} onChange={handleFormChange} />
              <input type="password" name="password" placeholder="Password" className="input input-bordered w-full max-w-xs mt-2" value={form.password} onChange={handleFormChange} required />
              <input type="password" name="passwordConfirm" placeholder="Re-enter your password" className="input input-bordered w-full max-w-xs mt-2" value={form.passwordConfirm} onChange={handleFormChange} required />
              <button type="submit" className="btn btn-primary w-full max-w-xs rounded-3xl mt-3">
                Register
              </button>
            </form>

            <div className="divider"></div>

            <Link className="link" to="/login">
              Already have an account? Sign in
            </Link>
          </div>
        </div>
      </div>
    </>
  );
}

export default Register;
