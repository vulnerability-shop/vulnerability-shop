import { useEffect, useState } from "react";
import { Link, useLocation, useNavigate } from 'react-router-dom';
import Alert, { AlertType } from '../components/Alert';

interface item {
  id: number;
  name: string;
  description: string;
  image: string;
  price: number;
  stock: number;
}

function Home() {
  const [error, setError] = useState('');
  const [items, setItems] = useState([]);
  const [currentPage, setPage] = useState(1);
  const [totalPages, setTotPages] = useState(0);
  const location = useLocation();
  const [displayMessage, setDisplayMessage] = useState(true);

  useEffect(() => {
    getItems();
  }, [currentPage]);

  const incrementCount = () => {
    setPage(currentPage + 1);   
  }

  const decrementCount = () => {
    setPage(currentPage - 1);
  }

  const getItems = async () => {
    try {
      const response = await fetch(`http://127.0.0.1:5181/getItems?page=${currentPage}&size=10`);
      //console.log(await response.json());
      if (response.status == 200) {
        const data = await response.json();
        setTotPages(data.totalPages);      
        console.log(data.data.length);
        setItems(data.data);               
      }
    } catch (error) {
      setError('We are currently experiencing technical difficulties, please try again later');
    }
  }
  
  return (
    <div className="flex flex-col items-center h-screen justify-center">
        {error.length > 0 && (
          <Alert type={AlertType.error} className="w-96 mb-5">
            {error}
          </Alert>
        )}

        {location.state && location.state.message.length > 0 && displayMessage && (
          <Alert type={AlertType.success} className="w-96 mb-5">
            {location.state.message}
          </Alert>
        )}

      <div className="mt-2 flex flex-col">
        <div className="-my-2 overflow-x-auto -mx-4 sm:-mx-6 lg:-mx-8">
          <div className="py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8">
            <div className="shadow overflow-hidden border-b border-gray-200 sm:rounded-lg">
              <table>
                <thead>
                  <tr>
                    <th>Name</th>
                    <th>Price</th>
                    <th>Stock</th>
                  </tr>
                </thead>
                <tbody>
                  {items.map((item, i) => (
                  <tr key={i}>
                    <td>{item.name}</td>
                    <td>{item.price}</td>
                    <td>{item.stock}</td>
                    <img className="max-w-[150px] max-h-[150px]" src={item.image}/>
                  </tr>
                  ))}  
                </tbody>           
              </table>
              {(currentPage != totalPages) &&
                <div className="flex w-max gap-4">
                  <button className="btn btn-outline btn-secondary" onClick={incrementCount}>Next Page</button>
                </div>
              }
              {(currentPage != 1) &&
                <div className="flex w-max gap-4">
                  <button className="btn btn-outline btn-secondary" onClick={decrementCount}>Previous Page</button>
                </div>
              }             
            </div>
          </div>
        </div>
      </div>
    </div>  
  ); 
}

export default Home;
