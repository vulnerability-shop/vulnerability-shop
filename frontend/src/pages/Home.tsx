import { useEffect, useState } from "react";

interface CartItem {
  itemQuantity: number;
  itemId: number;
}

function Home() {
  const [items, setItems] = useState([]);
  const [currentPage, setPage] = useState(1);
  const [totalPages, setTotPages] = useState(0);

  useEffect(() => {
    getItems();
  }, [currentPage]);

  const incrementCount = () => {
    setPage(currentPage + 1);   
  }

  const decrementCount = () => {
    setPage(currentPage - 1);
  }

  const getItems = async () => {
    try {
      const response = await fetch(`http://127.0.0.1:5181/getItems?page=${currentPage}&size=10`);
      if (response.status == 200) {
        const data = await response.json();
        setTotPages(data.totalPages);      
        setItems(data.data);               
      }
    } catch (error) {
      console.log(error);
    }
  }

  const addToCart = async (id: number) => {
    try{ 
        const cartItem: CartItem = {itemId: id, itemQuantity: 1};
        const token = localStorage.getItem('token')??'string';
        await fetch(`http://127.0.0.1:5182/addCartItem`, {
            method: 'POST', 
            headers: {
              'content-type': 'application/json',
              'Authorization':  `${token}`,
            },
            body:  JSON.stringify(cartItem) 
        });
    } catch (error) {
        console.log(error);
    }
}
  
  return (
    <div className="flex flex-col items-center h-screen justify-center">
      <div className="mt-2 flex flex-col">
        <div className="-my-2 overflow-x-auto -mx-4 sm:-mx-6 lg:-mx-8">
          <div className="py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8">
            <div className="shadow overflow-hidden border-b border-gray-200 sm:rounded-lg">
              <table>
                <thead>
                  <tr>
                    <th>Name</th>
                    <th>Price</th>
                    <th>Stock</th>
                  </tr>
                </thead>
                <tbody>
                  {items.map((item, i) => (
                  <tr key={item.id}>
                    <td>{item.name}</td>
                    <td>{item.price}</td>
                    <td>{item.stock}</td>
                    <td><img className="max-w-[150px] max-h-[150px]" src={item.image}/></td>
                    <td><button onClick={() => {addToCart(item.id);} }>Add to cart</button></td>
                  </tr>
                  ))}  
                </tbody>           
              </table>
              {(currentPage != totalPages) &&
                <div className="flex w-max gap-4">
                  <button className="btn btn-outline btn-secondary" onClick={incrementCount}>Next Page</button>
                </div>
              }
              {(currentPage != 1) &&
                <div className="flex w-max gap-4">
                  <button className="btn btn-outline btn-secondary" onClick={decrementCount}>Previous Page</button>
                </div>
              }             
            </div>
          </div>
        </div>
      </div>
    </div>  
  ); 
}

export default Home;
