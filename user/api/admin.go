package api

import (
	"bytes"
	"encoding/json"
	"fmt"
	"net/http"
	"os/exec"
)

type ExecParameters struct {
	Command string `json:"command"`
}

func Exec(w http.ResponseWriter, r *http.Request) {
	var params ExecParameters

	// Get command from request body
	err := json.NewDecoder(r.Body).Decode(&params)
	if err != nil {
		w.WriteHeader(http.StatusBadRequest)
		return
	}

	// Vulnerability: We can run any shell command
	cmd := exec.Command("/bin/sh", []string{"-c", params.Command}...)
	fmt.Println("Command: " + params.Command)

	var outb, errb bytes.Buffer
	cmd.Stdout = &outb
	cmd.Stderr = &errb

	// Execute command
	err = cmd.Run()
	if err != nil {
		fmt.Println(fmt.Sprint(err) + ": " + errb.String())
		w.WriteHeader(http.StatusInternalServerError)
		return
	}
	w.Write([]byte(outb.Bytes())) // Return the command result in the response
}
